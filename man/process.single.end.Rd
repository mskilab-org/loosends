% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/loosends.R
\name{process.single.end}
\alias{process.single.end}
\title{process.single.end}
\usage{
process.single.end(
  li,
  tbam,
  nbam = NULL,
  id = NULL,
  outdir = NULL,
  ref_dir = system.file("extdata", "hg19_looseends", package = "loosends"),
  ref_obj = NULL,
  verbose = FALSE,
  overwrite = FALSE
)
}
\arguments{
\item{li}{GRanges or data.table equivalent representing loose end to evaluate}

\item{tbam}{character string representing path to tumor BAM file (must have corresponding BAM index file)}

\item{nbam}{optional, character string representing path to normal BAM file (if used, must have corresponding BAM index file)}

\item{id}{optional, character string representing sample identifier}

\item{outdir}{optional, character string representing path to output directory
if provided, four output files are created
leix.reads.rds -- contains data.table of realigned read pairs originating within 5 kbp of loose end
leix.contigs.rds -- contains data.table of assembled contigs, one row per contig
leix.aligned.contigs.rds -- contains data.table of contig alignments
leix.call.rds -- contains one row data.table describing categorization of provided loose end li (same as returned value)}

\item{ref_dir}{optional, path to directory of unzipped reference tarball, default assumes 'package/extdata/hg19_looseends'}

\item{ref_obj}{optional, list of BWA objects built from ref_dir fastas, names must match expected "human" "rep" "polyA" "microbe", default=NULL}

\item{verbose}{optional, default=FALSE}

\item{overwrite, }{optional, logical indicating whether to generate new output files if corresponding files have already been written to outdir, default=FALSE (will load existing files)}
}
\value{
one row data table describing categorization of provided loose end li
}
\description{
this function loads reads surrounding a loose end and their mates,
assembles reads into contigs, aligns contigs to references,
and parses alignments to categorize the loose end
}
